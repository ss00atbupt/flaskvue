[feature]

# 是否根据label.txt生成label.json
Make_Label_Json = False
# 是否画出每段振动信号的整段波形-语谱图.png
Draw_Wave_Sepc = False
# 是否生成phase_json_average或phase_json_by_label
Make_Phase_Json = False

# 按照N个采样点一段进行平均截取
# Make_Phase_Json_Way = phase_json_average
# 平均截取时, 每段拼接50个.mat
speech_length = 50
# 按照人工标记的采样点进行截取
Make_Phase_Json_Way = phase_json_by_label

# 过程：train, val, test
process = train
#类 别标签，classA小类别，classB大类别
classA_dict = {'hua':0, 'jiaoti':1, 'kao':2, 'pai':3, 'panpa':4, 'qiao':5}
classB_dict = {'human':0, 'machine':1, 'natural':2}

# 振动信号存放的地址
data_dir = D:/Python Program/my-data-20210521/
label_txt_name = label.txt
label_json_name = label.json
# 采样率
sampling = 1000
# 帧长
wlen = 512
# 帧移
inc = 128
NFFT = 512
# 加窗类型：Hamming, Hanning, Rect, 。。。
window_shape = Hamming

# 特征提取的特征名称
features_name = ZCR, Amp, E, Xr, Xmean, Xrms, Xp, Peak, Margin, Impulse, Waveform, Var, K, S, FC, MSF, RMSF, VF, RVF
#features_name = ZCR_list, FC_list

#滤波方法，可选 None:不滤波; Wavelet_Packet:小波包滤波; Wavelet:小波滤波; 再加自适应滤波等
#Lvbo_Way = None
Lvbo_Way = Wavelet_Packet

# 小波包分解
wavelet = db1
mode = symmetric
maxlevel = 3
threshold = 0.1

#静音端点检测：None：不检测; Double_threshold：双门限法
VAD_Way = None

[signal_recognition]
channel = 100
algorithm = SVC
strategy = grid_search
normalise = False
pca = False